:javascript
  $(document).ready(function(){
    setInterval(function() {
      $.ajax({
        type: 'POST',
        url: "#{admin_sources_action_path(:progress)}",
        success: function(data){
          for(key in data) {
            document.getElementById('scrape'+ String(key)).style.width = data[key]['scrape'];
            document.getElementById('content'+ String(key)).style.width = data[key]['content'];
            document.getElementById('classify'+ String(key)).style.width = data[key]['classify'];
            document.getElementById('location'+ String(key)).style.width = data[key]['location'];
            if (data[key]['queued']) {
              document.getElementById('scrape_source_'+ String(key)).className = "btn btn-mini disabled";
            } else {
              document.getElementById('scrape_source_'+ String(key)).className = "btn btn-mini";
            }
          }
        },
        error: function(data){
          //alert(data.responseText);
        }
      });
    }, 5000); //5 seconds
    
    $('#toggle-button').toggleButtons({
      onChange: function ($el, status, e) {
        console.log($el, status, e);
        $.ajax({
          type: 'POST',
          url: "#{admin_webscraper_action_path(:update_classifier, 1)}",
          data: "status=" + String(status),
          success: function(data){
            
          },
          error: function(data){
            //alert(data.responseText);
          }
        });
      },
      style: {
        // Accepted values ["primary", "danger", "info", "success", "warning"] or nothing
        enabled: "success",
        disabled: "danger"
      }
    });
    if(!#{@classifier}) {
      $('#toggle-button').toggleButtons('toggleState'); // to toggle the disabled status
    }
  });
  

%div.row-fluid
  %div.span2
    = render 'admin/shared/sidebar'
    
  %div.span10
    %h2 Web Scraping Controls
    %div
      %span.label.label-info Stage 1: Web Crawling
      %span.label.label-success Stage 2: Content Extraction
      %span.label.label-warning Stage 3: Location Mining
      %span.label.label-important Stage 4: Classification
    %h4 Classifier
    %p Current Accuracy: #{number_to_percentage(Classifier.all[0].accuracy*100)}
    %p When off, the web scraper will pull in all articles and you will have to manually determine if article contains hate speech in order to build training data set. When on, the web scraper will attempt to pull in only articles that contain hate speech. You will still need to verify articles but the classifier will be filtering articles it does not think are hate speech.
    %div
      %div.pull-left#toggle-button
        %input{:checked => "", :type => "checkbox"}
      %div.pull-left= button_to 'Retrain', admin_webscraper_action_path(:retrain), :class => "btn btn-danger"
      %div.pull-right= button_to 'Scrape All', admin_webscraper_action_path(:scrapeAll), :class => "btn btn-success"
    
    %table.table.table-striped.table-hover#source_table
      %thead
        %tr
          %th #
          %th Name
          %th Last Scraped
          %th Progress
          %th 
        %tbody
          - @sources.each do |source|
            %tr
              %td= source.id
              %td= link_to source.name, source.home_page
              %td= source.last_scraped
              %td
                .progress.progress-striped.active
                  .bar.bar{:style => "width: " + source.progress_scrape, :id => "scrape" + source.id.to_s}
                  .bar.bar-success{:style => "width: " + source.progress_content, :id => "content" + source.id.to_s}
                  .bar.bar-warning{:style => "width: " + source.progress_location, :id => "location" + source.id.to_s}
                  .bar.bar-danger{:style => "width: " + source.progress_classify, :id => "classify" + source.id.to_s}
              %td 
                - if !source.queued
                  = link_to 'scrape', admin_webscraper_action_path(:scrape, source.id), :id => "scrape_source_#{source.id}", :class => "btn btn-mini"
                - else
                  = link_to 'scrape', admin_webscraper_action_path(:scrape, source.id), :id => "scrape_source_#{source.id}", :class => "btn btn-mini disabled"
